# https://github.com/bartmichu/zfs-zabbix-userparams
#
# Basic monitoring of ZFS data pools.
#
# Usage:
# - Copy the userparams file (zfs-userparams.conf) to a directory included in your Zabbix Agent configuration file, such as /etc/zabbix/zabbix_agentd.d/ or /etc/zabbix/zabbix_agent2.d/.
# - Set the owner and group of the userparams file (chown root:zabbix zfs-userparams.conf).
# - Set the mode of the userparams file (chmod 0440 zfs-userparams.conf).
# - Restart the Zabbix Agent (systemctl restart zabbix-agent.service or systemctl restart zabbix-agent2.service).
# - Import the corresponding template file (zfs-userparams-template.yaml) on the Zabbix Server.
# - Link the 'Basic ZFS by Zabbix agent active' template to the selected hosts.
# - You may need to increase the Timeout value in your Zabbix Agent configuration file, for example, Timeout=30.
#
# System requirements:
# - The 'zfsutils-linux' package needs to be installed.
#
# Tested on:
# - Zabbix Agent 2 on Ubuntu 20.04 and Ubuntu 22.04
# - Zabbix Server 6.0 LTS
#


# Return the version number of this file.
# This field is reserved for future use and intended for versioning within the template.
UserParameter=zfs-userparams.userparams-version,echo 2


# Check for degraded pools.
#
# Expected return value: an integer indicating the number of matching pools.
UserParameter=zfs-userparams.pool.degraded,/usr/sbin/zpool list -H -o health | /usr/bin/grep -i degraded | /usr/bin/wc -l


# Check for faulted pools.
#
# Expected return value: an integer indicating the number of matching pools.
UserParameter=zfs-userparams.pool.faulted,/usr/sbin/zpool list -H -o health | /usr/bin/grep -i faulted | /usr/bin/wc -l


# Check for offline pools.
#
# Expected return value: an integer indicating the number of matching pools.
UserParameter=zfs-userparams.pool.offline,/usr/sbin/zpool list -H -o health | /usr/bin/grep -i offline | /usr/bin/wc -l


# Check for unavailable pools.
#
# Expected return value: an integer indicating the number of matching pools.
UserParameter=zfs-userparams.pool.unavail,/usr/sbin/zpool list -H -o health | /usr/bin/grep -i unavail | /usr/bin/wc -l


# Check for removed pools.
#
# Expected return value: an integer indicating the number of matching pools.
UserParameter=zfs-userparams.pool.removed,/usr/sbin/zpool list -H -o health | /usr/bin/grep -i removed | /usr/bin/wc -l


# Check for pools with more than 80% disk space used (capacity).
#
# Expected return value: an integer indicating the number of matching pools.
UserParameter=zfs-userparams.pool.capacity-80,/usr/sbin/zpool list -H -o capacity | /usr/bin/cut -d '%' -f1 | /usr/bin/awk '$1>80' | /usr/bin/wc -l


# Check for pools with more than 90% disk space used (capacity).
#
# Expected return value: an integer indicating the number of matching pools.
UserParameter=zfs-userparams.pool.capacity-90,/usr/sbin/zpool list -H -o capacity | /usr/bin/cut -d '%' -f1 | /usr/bin/awk '$1>90' | /usr/bin/wc -l


# Check for pools with more than 70% free disk space fragmentation.
#
# Expected return value: an integer indicating the number of matching pools.
UserParameter=zfs-userparams.pool.fragmentation,/usr/sbin/zpool list -H -o fragmentation | /usr/bin/cut -d '%' -f1 | /usr/bin/awk '$1>70' | /usr/bin/wc -l


# Check the number of available ZFS storage pools.
#
# Expected return value: an integer indicating the number of available pools.
UserParameter=zfs-userparams.pool.number,/usr/sbin/zpool list -H | /usr/bin/wc -l
