---

services:
  postgresql:
    container_name: authentik-1-postgresql
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - {{ authentik_path }}/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD={{ authentik_postgres_password }}
      - POSTGRES_USER={{ authentik_postgres_user }}
      - POSTGRES_DB={{ authentik_postgres_db }}
    networks:
      - backend
  redis:
    container_name: authentik-1-redis
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - {{ authentik_path }}/redis:/data
    networks:
      - backend
  server:
    container_name: authentik-1-server
    image: ghcr.io/goauthentik/server:2024.10.3
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER={{ authentik_postgres_user }}
      - AUTHENTIK_POSTGRESQL__NAME={{ authentik_postgres_db }}
      - AUTHENTIK_POSTGRESQL__PASSWORD={{ authentik_postgres_password }}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=true
      - AUTHENTIK_SECRET_KEY={{ authentik_secret_key }}
      - AUTHENTIK_EMAIL__HOST={{ authentik_email_host }}
      - AUTHENTIK_EMAIL__PORT={{ authentik_email_port }}
      - AUTHENTIK_EMAIL__USERNAME={{ authentik_email_username }}
      - AUTHENTIK_EMAIL__PASSWORD={{ authentik_email_password }}
      - AUTHENTIK_EMAIL__USE_TLS={{ authentik_email_tls }}
      - AUTHENTIK_EMAIL__USE_SSL={{ authentik_email_ssl }}
      - AUTHENTIK_EMAIL__TIMEOUT={{ authentik_email_timeout }}
      - AUTHENTIK_EMAIL__FROM={{ authentik_email_from }}
    labels:
      traefik.enable: 'true'
      traefik.docker.network: proxy
      traefik.http.middlewares.authentik.redirectscheme.scheme: https
      traefik.http.routers.authentik-https.entrypoints: websecure
      traefik.http.routers.authentik-https.rule: Host(`auth.ffh.zone`)
      traefik.http.routers.authentik-https.tls.certresolver: letsencrypt
      traefik.http.routers.authentik-https.service: authentik-svc
      traefik.http.services.authentik-svc.loadbalancer.server.port: '9000'
    volumes:
      - {{ authentik_path }}/media:/media
      - {{ authentik_path }}/custom-templates:/templates
    depends_on:
      - postgresql
      - redis
    networks:
      - backend
      - proxy
  worker:
    container_name: authentik-1-worker
    image: ghcr.io/goauthentik/server:2024.10.3
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER={{ authentik_postgres_user }}
      - AUTHENTIK_POSTGRESQL__NAME={{ authentik_postgres_db }}
      - AUTHENTIK_POSTGRESQL__PASSWORD={{ authentik_postgres_password }}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=true
      - AUTHENTIK_SECRET_KEY={{ authentik_secret_key }}
      - AUTHENTIK_EMAIL__HOST={{ authentik_email_host }}
      - AUTHENTIK_EMAIL__PORT={{ authentik_email_port }}
      - AUTHENTIK_EMAIL__USERNAME={{ authentik_email_username }}
      - AUTHENTIK_EMAIL__PASSWORD={{ authentik_email_password }}
      - AUTHENTIK_EMAIL__USE_TLS={{ authentik_email_tls }}
      - AUTHENTIK_EMAIL__USE_SSL={{ authentik_email_ssl }}
      - AUTHENTIK_EMAIL__TIMEOUT={{ authentik_email_timeout }}
      - AUTHENTIK_EMAIL__FROM={{ authentik_email_from }}
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - {{ authentik_path }}/media:/media
      - {{ authentik_path }}/certs:/certs
      - {{ authentik_path }}/custom-templates:/templates
    depends_on:
      - postgresql
      - redis
    networks:
      - backend

networks:
  proxy:
    external: true
  backend:
