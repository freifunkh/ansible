log syslog all;
router id {{ bird_router_id }};
define my_asn = {{ bird_my_asn }};
timeformat protocol iso long;

protocol device {
}

protocol direct {
  disabled;    # Disable by default
  # ipv4;      # Connect to default IPv4 table
  ipv6;      # ... and to default IPv6 table
  interface "dummy0";
}

protocol kernel {
  ipv6 {
    export filter {
      krt_prefsrc = {{ bird_krt_prefsrc_v6 }};
      if source ~ [RTS_BGP] then accept; else reject;
        # we do not want to export the static unreachable route, so
        # we do it like this as of now
    };
    import none;
  };
  kernel table 2000;  # Kernel table to synchronize with (cix)
}

protocol kernel {
  ipv4 {
    export filter {
      krt_prefsrc = {{ bird_krt_prefsrc_v4 }};
      if source ~ [RTS_BGP] then accept; else reject;
    };
    import none;
  };
  kernel table 2000;  # Kernel table to synchronize with (default: main)
}

protocol static {
  ipv6;
{% if bird_announce_prefix_v6 is defined %}
  route {{ bird_announce_prefix_v6 }} unreachable;
{% endif %}
}

protocol static {
  ipv4;
{% if bird_announce_prefix_v4 is defined %}
  route {{ bird_announce_prefix_v4 }} unreachable;
{% endif %}
}

template bgp generic_bgp {
  allow local as {{ bird_my_asn }};
  hold time 90;
}

include "{{ bird_config_path }}/bird.d/*.conf";
