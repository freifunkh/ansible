log syslog all;
router id 194.50.19.34;
define my_asn = 209347;
timeformat protocol iso long;

protocol device {
}

protocol direct {
        disabled;               # Disable by default
        # ipv4;                 # Connect to default IPv4 table
        ipv6;                   # ... and to default IPv6 table
        interface "dummy0";
}

protocol kernel {
        ipv4 {                  # Connect protocol to IPv4 table by channel
                export filter {
                        krt_prefsrc = 45.12.203.1;
                        if source ~ [RTS_BGP] then accept; else reject;
                };
                import none;
        };
        kernel table 2000;      # Kernel table to synchronize with (default: main)
}

filter test {
        if net ~ [2001:678:978::/48] then reject;
        if net ~ [::/0] then reject;
        if source ~ [RTS_BGP] then accept;

        reject;
}

protocol kernel {
        ipv6 {
#               export where source ~ [RTS_BGP]; # we do not want to export the
#                                                 # static unreachable route, so
#                                                 # we do it like this as of now
                export filter test;
                import none;
        };
        kernel table 2000;      # Kernel table to synchronize with (therealcix)
}

protocol static {
        ipv6;
        route 2001:678:978::/48 unreachable;
}

protocol static {
        ipv4;
        route 45.12.203.0/24 unreachable;
}

filter to_upstream6 {
        bgp_large_community.add((57555, 921, 100));
        bgp_large_community.add((57555, 921, 200));
        #bgp_large_community.add((57555, 0, 29670));
        #bgp_community.add((0, 29670));
        #bgp_community.add((0, 24679));
        if net ~ [2001:678:978::/48]
        then accept;
        else reject;
}

filter to_upstream4 {
        bgp_large_community.add((57555, 921, 100));
        bgp_large_community.add((57555, 921, 200));
        if net ~ [45.12.203.0/24]
        then accept;
        else reject;
}

filter no_1und1 {
        if bgp_path.first = 8560
        then reject;
        else accept;
}

template bgp cix_peer6 {
        local 2001:7f8:f2:e1:0:a520:9347:1 as my_asn;
        hold time 90;
        ipv6 {
                import keep filtered;
                import all; #filter no_1und1;
                #export none;
                export filter to_upstream6;
        };
}

template bgp cix_peer4 {
        local 185.1.167.96 as my_asn;
        hold time 90;
        ipv4 {
                import keep filtered;
                import all; #filter no_1und1;
                #export none;
                export filter to_upstream4;
        };
}

protocol bgp stefan4 from cix_peer4 {
        description "Stefan (IPv4)";
        neighbor 185.1.166.111 as 48646;
}

protocol bgp stefan6 from cix_peer6 {
        description "Stefan (IPv6)";
        neighbor 2001:7f8:f2:e1:0:a124:8646:1 as 48646;
}
